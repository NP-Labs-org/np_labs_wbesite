---
interface Tag {
  text: string;
}

interface Step {
  number: string;
  title: string;
  description: string;
  tags: Tag[];
}

interface Props {
  title?: string;
  subtitle?: string;
  steps?: Array<Step>;
  isDark?: boolean;
}

const {
  title = "Document infrastructure for every use case",
  subtitle = "From prototype to production, build any document experience you can imagine on a foundation that's always at the cutting edge.",
  steps = [
    {
      number: "01",
      title: "Ingestion pipelines",
      description: "Ingest and transform documents into high quality markdown for LLMs. Our multimodal models break down complex layouts with exceptional accuracy, semantically chunk elements, and deliver clean LLM-ready outputs.",
      tags: [{ text: "FILE PARSING" }]
    },
    {
      number: "02",
      title: "In-product experiences",
      description: "Embed user-facing document flows into your product with customizable, low-latency extraction and classification. Use our APIs to turn complex docs into structured data in seconds.",
      tags: [{ text: "EXTRACTION" }, { text: "CLASSIFICATION" }, { text: "SPLITTING" }]
    },
    {
      number: "03",
      title: "AI-powered analysis",
      description: "Leverage advanced AI models to analyze documents, extract insights, and automate workflows. Our intelligent systems understand context and deliver actionable results.",
      tags: [{ text: "AI MODELS" }, { text: "AUTOMATION" }]
    }
  ],
  isDark = false
} = Astro.props;
---

<section class:list={["relative", { dark: isDark }]}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 py-16 md:py-20 lg:py-24">
    {/* Header */}
    <div class="mb-20">
      {title && <h2 class="text-4xl md:text-5xl font-bold leading-tighter tracking-tight mb-4 font-heading">{title}</h2>}
      {subtitle && <p class="text-xl text-muted dark:text-slate-400 mb-8">{subtitle}</p>}
    </div>

    {/* Steps */}
    <div class="relative">
      {/* Vertical line */}
      <div class="absolute left-[2.25rem] top-3 bottom-3 w-px bg-gray-200 dark:bg-gray-700"></div>

      <div class="space-y-24">
        {
          steps.map((step) => (
            <div class="relative grid grid-cols-1 md:grid-cols-12 gap-4 md:gap-8">
              {/* Number */}
              <div class="md:col-span-3 flex items-center">
                <div class="text-5xl font-bold text-gray-200 dark:text-gray-700">{step.number}</div>
              </div>

              {/* Content */}
              <div class="md:col-span-9">
                <div class="flex flex-col gap-4">
                  <h3 class="text-2xl md:text-3xl font-bold">{step.title}</h3>
                  
                  {/* Tags */}
                  <div class="flex flex-wrap gap-2">
                    {step.tags.map((tag) => (
                      <span class="inline-flex items-center px-3 py-1 text-sm font-medium tracking-wider uppercase bg-transparent border border-current rounded-full text-muted dark:text-slate-400">
                        {tag.text}
                      </span>
                    ))}
                  </div>

                  <p class="text-muted dark:text-slate-400">{step.description}</p>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .font-heading {
    font-family: var(--aw-font-heading);
  }
</style> 