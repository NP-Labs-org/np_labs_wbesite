---
import { Picture } from 'astro:assets';

import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: {
    image?: any;
    category?: { title?: string; slug?: string };
    title: string;
    author?: string;
    publishDate: Date;
    readingTime?: number;
    tags?: Array<{ title: string; slug: string }>;
    Content?: any;
    content?: string;
  };
  url: string;
}

const { post } = Astro.props;
const { Content } = post;
---

<section class="relative bg-black text-white py-8 md:py-16">
  <article class="max-w-7xl mx-auto px-4 sm:px-6">
    <header class="mb-10 md:mb-16">
      {post.image && (
        <div class="relative border border-white/10 mb-8 overflow-hidden">
          <Picture
            src={post.image}
            class="w-full h-auto"
            widths={[400, 768, 1024, 2040]}
            sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
            loading="eager"
            width={1024}
            height={576}
            alt={post.title}
          />
        </div>
      )}
      
      <div class="flex mb-6">
        <div class="text-gray-500 text-2xl font-light">[</div>
        <div class="text-sm font-semibold tracking-wider ml-5 mr-16 pt-1 text-gray-500 uppercase">
          {post.category?.title || 'ARTICLE'}
        </div>
      </div>

      <h1 class="text-3xl md:text-4xl font-bold leading-tight tracking-tighter mb-4 font-heading uppercase">
        {post.title}
      </h1>
      
      <div class="flex items-center text-gray-400 text-sm mb-8">
        <span>{post.author && `By ${post.author}`}</span>
        <span class="mx-2">•</span>
        <time datetime={String(post.publishDate)}>{getFormattedDate(post.publishDate)}</time>
        {post.readingTime && (
          <>
            <span class="mx-2">•</span>
            <span>{post.readingTime} min read</span>
          </>
        )}
      </div>
    </header>

    <div class="border-t border-white/10 pt-8 mb-8">
      <div class="max-w-4xl mx-auto">
        <div 
          class="prose prose-lg md:prose-xl dark prose-invert prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-blue-400 prose-img:rounded-none prose-img:border prose-img:border-white/10"
        >
          {Content ? <Content /> : <Fragment set:html={post.content || ''} />}
        </div>
      </div>
    </div>
    
    <div class="border-t border-white/10 pt-8 flex flex-wrap gap-3">
      {post.tags && post.tags.map((tag) => (
        <a
          href={`/category/${tag.slug}`}
          class="inline-flex items-center justify-center px-3 py-1.5 text-xs uppercase tracking-wider text-gray-400 border border-white/10 bg-black/30 hover:border-white/30 hover:text-white transition-all duration-300"
        >
          {tag.title}
        </a>
      ))}
    </div>
  </article>
</section>
